
SVET_TEST.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000496  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000050a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  0000050a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000050a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000053c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000578  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000e5c  00000000  00000000  00000608  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000643  00000000  00000000  00001464  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000885  00000000  00000000  00001aa7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000120  00000000  00000000  0000232c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e8  00000000  00000000  0000244c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009de  00000000  00000000  00002a34  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  00003412  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	10 c0       	rjmp	.+32     	; 0x22 <__ctors_end>
   2:	1d c0       	rjmp	.+58     	; 0x3e <__bad_interrupt>
   4:	1c c0       	rjmp	.+56     	; 0x3e <__bad_interrupt>
   6:	1b c0       	rjmp	.+54     	; 0x3e <__bad_interrupt>
   8:	1a c0       	rjmp	.+52     	; 0x3e <__bad_interrupt>
   a:	19 c0       	rjmp	.+50     	; 0x3e <__bad_interrupt>
   c:	18 c0       	rjmp	.+48     	; 0x3e <__bad_interrupt>
   e:	17 c0       	rjmp	.+46     	; 0x3e <__bad_interrupt>
  10:	16 c0       	rjmp	.+44     	; 0x3e <__bad_interrupt>
  12:	15 c0       	rjmp	.+42     	; 0x3e <__bad_interrupt>
  14:	14 c0       	rjmp	.+40     	; 0x3e <__bad_interrupt>
  16:	13 c0       	rjmp	.+38     	; 0x3e <__bad_interrupt>
  18:	12 c0       	rjmp	.+36     	; 0x3e <__bad_interrupt>
  1a:	11 c0       	rjmp	.+34     	; 0x3e <__bad_interrupt>
  1c:	10 c0       	rjmp	.+32     	; 0x3e <__bad_interrupt>
  1e:	0f c0       	rjmp	.+30     	; 0x3e <__bad_interrupt>
  20:	0e c0       	rjmp	.+28     	; 0x3e <__bad_interrupt>

00000022 <__ctors_end>:
  22:	11 24       	eor	r1, r1
  24:	1f be       	out	0x3f, r1	; 63
  26:	cf ed       	ldi	r28, 0xDF	; 223
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_clear_bss>:
  2a:	20 e0       	ldi	r18, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	01 c0       	rjmp	.+2      	; 0x34 <.do_clear_bss_start>

00000032 <.do_clear_bss_loop>:
  32:	1d 92       	st	X+, r1

00000034 <.do_clear_bss_start>:
  34:	a1 36       	cpi	r26, 0x61	; 97
  36:	b2 07       	cpc	r27, r18
  38:	e1 f7       	brne	.-8      	; 0x32 <.do_clear_bss_loop>
  3a:	fc d0       	rcall	.+504    	; 0x234 <main>
  3c:	2a c2       	rjmp	.+1108   	; 0x492 <_exit>

0000003e <__bad_interrupt>:
  3e:	e0 cf       	rjmp	.-64     	; 0x0 <__vectors>

00000040 <_Z7pinModehh>:
	TCCR1B = 0b00000001; // CLK (need more info on frequency)
	//TCCR1C = 0b01000000; // CLK (need more info on frequency)
	TCNT1H=0; //counter starting value
	TCNT1L=0; //counter starting value
	OCR1BH=ADCH; //PWM duty
	OCR1BL=ADCH; //PWM duty
  40:	98 2f       	mov	r25, r24
  42:	90 7f       	andi	r25, 0xF0	; 240
  44:	8f 70       	andi	r24, 0x0F	; 15
  46:	90 3a       	cpi	r25, 0xA0	; 160
  48:	29 f0       	breq	.+10     	; 0x54 <_Z7pinModehh+0x14>
  4a:	90 3b       	cpi	r25, 0xB0	; 176
  4c:	29 f4       	brne	.+10     	; 0x58 <_Z7pinModehh+0x18>
  4e:	e7 e3       	ldi	r30, 0x37	; 55
  50:	f0 e0       	ldi	r31, 0x00	; 0
  52:	02 c0       	rjmp	.+4      	; 0x58 <_Z7pinModehh+0x18>
  54:	ea e3       	ldi	r30, 0x3A	; 58
  56:	f0 e0       	ldi	r31, 0x00	; 0
  58:	90 81       	ld	r25, Z
  5a:	21 e0       	ldi	r18, 0x01	; 1
  5c:	30 e0       	ldi	r19, 0x00	; 0
  5e:	08 2e       	mov	r0, r24
  60:	02 c0       	rjmp	.+4      	; 0x66 <_Z7pinModehh+0x26>
  62:	22 0f       	add	r18, r18
  64:	33 1f       	adc	r19, r19
  66:	0a 94       	dec	r0
  68:	e2 f7       	brpl	.-8      	; 0x62 <_Z7pinModehh+0x22>
  6a:	20 95       	com	r18
  6c:	29 23       	and	r18, r25
  6e:	62 30       	cpi	r22, 0x02	; 2
  70:	40 f4       	brcc	.+16     	; 0x82 <__DATA_REGION_LENGTH__+0x2>
  72:	70 e0       	ldi	r23, 0x00	; 0
  74:	02 c0       	rjmp	.+4      	; 0x7a <_Z7pinModehh+0x3a>
  76:	66 0f       	add	r22, r22
  78:	77 1f       	adc	r23, r23
  7a:	8a 95       	dec	r24
  7c:	e2 f7       	brpl	.-8      	; 0x76 <_Z7pinModehh+0x36>
  7e:	26 2b       	or	r18, r22
  80:	20 83       	st	Z, r18
  82:	08 95       	ret

00000084 <_Z12digitalWritehh>:
  84:	98 2f       	mov	r25, r24
  86:	90 7f       	andi	r25, 0xF0	; 240
  88:	8f 70       	andi	r24, 0x0F	; 15
  8a:	90 3a       	cpi	r25, 0xA0	; 160
  8c:	29 f0       	breq	.+10     	; 0x98 <_Z12digitalWritehh+0x14>
  8e:	90 3b       	cpi	r25, 0xB0	; 176
  90:	29 f4       	brne	.+10     	; 0x9c <_Z12digitalWritehh+0x18>
  92:	e8 e3       	ldi	r30, 0x38	; 56
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	02 c0       	rjmp	.+4      	; 0x9c <_Z12digitalWritehh+0x18>
  98:	eb e3       	ldi	r30, 0x3B	; 59
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	90 81       	ld	r25, Z
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	30 e0       	ldi	r19, 0x00	; 0
  a2:	08 2e       	mov	r0, r24
  a4:	02 c0       	rjmp	.+4      	; 0xaa <_Z12digitalWritehh+0x26>
  a6:	22 0f       	add	r18, r18
  a8:	33 1f       	adc	r19, r19
  aa:	0a 94       	dec	r0
  ac:	e2 f7       	brpl	.-8      	; 0xa6 <_Z12digitalWritehh+0x22>
  ae:	20 95       	com	r18
  b0:	29 23       	and	r18, r25
  b2:	62 30       	cpi	r22, 0x02	; 2
  b4:	40 f4       	brcc	.+16     	; 0xc6 <_Z12digitalWritehh+0x42>
  b6:	70 e0       	ldi	r23, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <_Z12digitalWritehh+0x3a>
  ba:	66 0f       	add	r22, r22
  bc:	77 1f       	adc	r23, r23
  be:	8a 95       	dec	r24
  c0:	e2 f7       	brpl	.-8      	; 0xba <_Z12digitalWritehh+0x36>
  c2:	26 2b       	or	r18, r22
  c4:	20 83       	st	Z, r18
  c6:	08 95       	ret

000000c8 <_Z15set_H_and_delayv>:
  c8:	88 b3       	in	r24, 0x18	; 24
  ca:	84 60       	ori	r24, 0x04	; 4
  cc:	88 bb       	out	0x18, r24	; 24
  ce:	86 e0       	ldi	r24, 0x06	; 6
  d0:	8a 95       	dec	r24
  d2:	f1 f7       	brne	.-4      	; 0xd0 <_Z15set_H_and_delayv+0x8>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <_Z15set_H_and_delayv+0xe>
  d6:	88 b3       	in	r24, 0x18	; 24
  d8:	8b 7f       	andi	r24, 0xFB	; 251
  da:	88 bb       	out	0x18, r24	; 24
  dc:	08 95       	ret

000000de <_Z15set_L_and_delayv>:
  de:	88 b3       	in	r24, 0x18	; 24
  e0:	84 60       	ori	r24, 0x04	; 4
  e2:	88 bb       	out	0x18, r24	; 24
  e4:	88 b3       	in	r24, 0x18	; 24
  e6:	8b 7f       	andi	r24, 0xFB	; 251
  e8:	88 bb       	out	0x18, r24	; 24
  ea:	86 e0       	ldi	r24, 0x06	; 6
  ec:	8a 95       	dec	r24
  ee:	f1 f7       	brne	.-4      	; 0xec <__stack+0xd>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <__stack+0x13>
  f2:	08 95       	ret

000000f4 <_Z14PWM_generationv>:
  f4:	83 e2       	ldi	r24, 0x23	; 35
  f6:	80 bf       	out	0x30, r24	; 48
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	83 bf       	out	0x33, r24	; 51
  fc:	12 be       	out	0x32, r1	; 50
  fe:	8f e7       	ldi	r24, 0x7F	; 127
 100:	8c bf       	out	0x3c, r24	; 60
 102:	08 95       	ret

00000104 <_Z12EEPROM_writehh>:
 104:	e1 99       	sbic	0x1c, 1	; 28
 106:	fe cf       	rjmp	.-4      	; 0x104 <_Z12EEPROM_writehh>
 108:	1c ba       	out	0x1c, r1	; 28
 10a:	70 e0       	ldi	r23, 0x00	; 0
 10c:	7f bb       	out	0x1f, r23	; 31
 10e:	6e bb       	out	0x1e, r22	; 30
 110:	8d bb       	out	0x1d, r24	; 29
 112:	8c b3       	in	r24, 0x1c	; 28
 114:	84 60       	ori	r24, 0x04	; 4
 116:	8c bb       	out	0x1c, r24	; 28
 118:	8c b3       	in	r24, 0x1c	; 28
 11a:	82 60       	ori	r24, 0x02	; 2
 11c:	8c bb       	out	0x1c, r24	; 28
 11e:	08 95       	ret

00000120 <_Z11EEPROM_readh>:
 120:	e1 99       	sbic	0x1c, 1	; 28
 122:	fe cf       	rjmp	.-4      	; 0x120 <_Z11EEPROM_readh>
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	9f bb       	out	0x1f, r25	; 31
 128:	8e bb       	out	0x1e, r24	; 30
 12a:	8c b3       	in	r24, 0x1c	; 28
 12c:	81 60       	ori	r24, 0x01	; 1
 12e:	8c bb       	out	0x1c, r24	; 28
 130:	8d b3       	in	r24, 0x1d	; 29
 132:	08 95       	ret

00000134 <_Z9send_byteh>:
 134:	cf 93       	push	r28
 136:	c8 2f       	mov	r28, r24
 138:	88 23       	and	r24, r24
 13a:	14 f4       	brge	.+4      	; 0x140 <_Z9send_byteh+0xc>
 13c:	c5 df       	rcall	.-118    	; 0xc8 <_Z15set_H_and_delayv>
 13e:	01 c0       	rjmp	.+2      	; 0x142 <_Z9send_byteh+0xe>
 140:	ce df       	rcall	.-100    	; 0xde <_Z15set_L_and_delayv>
 142:	c6 ff       	sbrs	r28, 6
 144:	02 c0       	rjmp	.+4      	; 0x14a <_Z9send_byteh+0x16>
 146:	c0 df       	rcall	.-128    	; 0xc8 <_Z15set_H_and_delayv>
 148:	01 c0       	rjmp	.+2      	; 0x14c <_Z9send_byteh+0x18>
 14a:	c9 df       	rcall	.-110    	; 0xde <_Z15set_L_and_delayv>
 14c:	c5 ff       	sbrs	r28, 5
 14e:	02 c0       	rjmp	.+4      	; 0x154 <_Z9send_byteh+0x20>
 150:	bb df       	rcall	.-138    	; 0xc8 <_Z15set_H_and_delayv>
 152:	01 c0       	rjmp	.+2      	; 0x156 <_Z9send_byteh+0x22>
 154:	c4 df       	rcall	.-120    	; 0xde <_Z15set_L_and_delayv>
 156:	c4 ff       	sbrs	r28, 4
 158:	02 c0       	rjmp	.+4      	; 0x15e <_Z9send_byteh+0x2a>
 15a:	b6 df       	rcall	.-148    	; 0xc8 <_Z15set_H_and_delayv>
 15c:	01 c0       	rjmp	.+2      	; 0x160 <_Z9send_byteh+0x2c>
 15e:	bf df       	rcall	.-130    	; 0xde <_Z15set_L_and_delayv>
 160:	c3 ff       	sbrs	r28, 3
 162:	02 c0       	rjmp	.+4      	; 0x168 <_Z9send_byteh+0x34>
 164:	b1 df       	rcall	.-158    	; 0xc8 <_Z15set_H_and_delayv>
 166:	01 c0       	rjmp	.+2      	; 0x16a <_Z9send_byteh+0x36>
 168:	ba df       	rcall	.-140    	; 0xde <_Z15set_L_and_delayv>
 16a:	c2 ff       	sbrs	r28, 2
 16c:	02 c0       	rjmp	.+4      	; 0x172 <_Z9send_byteh+0x3e>
 16e:	ac df       	rcall	.-168    	; 0xc8 <_Z15set_H_and_delayv>
 170:	01 c0       	rjmp	.+2      	; 0x174 <_Z9send_byteh+0x40>
 172:	b5 df       	rcall	.-150    	; 0xde <_Z15set_L_and_delayv>
 174:	c1 ff       	sbrs	r28, 1
 176:	02 c0       	rjmp	.+4      	; 0x17c <_Z9send_byteh+0x48>
 178:	a7 df       	rcall	.-178    	; 0xc8 <_Z15set_H_and_delayv>
 17a:	01 c0       	rjmp	.+2      	; 0x17e <_Z9send_byteh+0x4a>
 17c:	b0 df       	rcall	.-160    	; 0xde <_Z15set_L_and_delayv>
 17e:	c0 ff       	sbrs	r28, 0
 180:	02 c0       	rjmp	.+4      	; 0x186 <_Z9send_byteh+0x52>
 182:	a2 df       	rcall	.-188    	; 0xc8 <_Z15set_H_and_delayv>
 184:	01 c0       	rjmp	.+2      	; 0x188 <_Z9send_byteh+0x54>
 186:	ab df       	rcall	.-170    	; 0xde <_Z15set_L_and_delayv>
 188:	cf 91       	pop	r28
 18a:	08 95       	ret

0000018c <_Z8send_GRBhhh>:
 18c:	0f 93       	push	r16
 18e:	1f 93       	push	r17
 190:	cf 93       	push	r28
 192:	df 93       	push	r29
 194:	08 2f       	mov	r16, r24
 196:	16 2f       	mov	r17, r22
 198:	d4 2f       	mov	r29, r20
 19a:	c0 e0       	ldi	r28, 0x00	; 0
 19c:	c0 39       	cpi	r28, 0x90	; 144
 19e:	40 f4       	brcc	.+16     	; 0x1b0 <_Z8send_GRBhhh+0x24>
 1a0:	80 2f       	mov	r24, r16
 1a2:	c8 df       	rcall	.-112    	; 0x134 <_Z9send_byteh>
 1a4:	81 2f       	mov	r24, r17
 1a6:	c6 df       	rcall	.-116    	; 0x134 <_Z9send_byteh>
 1a8:	8d 2f       	mov	r24, r29
 1aa:	c4 df       	rcall	.-120    	; 0x134 <_Z9send_byteh>
 1ac:	cf 5f       	subi	r28, 0xFF	; 255
 1ae:	f6 cf       	rjmp	.-20     	; 0x19c <_Z8send_GRBhhh+0x10>
 1b0:	df 91       	pop	r29
 1b2:	cf 91       	pop	r28
 1b4:	1f 91       	pop	r17
 1b6:	0f 91       	pop	r16
 1b8:	08 95       	ret

000001ba <_Z8ADC_initv>:
 1ba:	82 e0       	ldi	r24, 0x02	; 2
 1bc:	87 b9       	out	0x07, r24	; 7
 1be:	87 e8       	ldi	r24, 0x87	; 135
 1c0:	86 b9       	out	0x06, r24	; 6
 1c2:	80 e1       	ldi	r24, 0x10	; 16
 1c4:	83 b9       	out	0x03, r24	; 3
 1c6:	08 95       	ret

000001c8 <_Z16base_ADC_measurev>:
 1c8:	20 e0       	ldi	r18, 0x00	; 0
 1ca:	40 e0       	ldi	r20, 0x00	; 0
 1cc:	50 e0       	ldi	r21, 0x00	; 0
 1ce:	24 36       	cpi	r18, 0x64	; 100
 1d0:	50 f4       	brcc	.+20     	; 0x1e6 <_Z16base_ADC_measurev+0x1e>
 1d2:	96 b1       	in	r25, 0x06	; 6
 1d4:	90 64       	ori	r25, 0x40	; 64
 1d6:	96 b9       	out	0x06, r25	; 6
 1d8:	36 99       	sbic	0x06, 6	; 6
 1da:	fe cf       	rjmp	.-4      	; 0x1d8 <_Z16base_ADC_measurev+0x10>
 1dc:	85 b1       	in	r24, 0x05	; 5
 1de:	48 0f       	add	r20, r24
 1e0:	51 1d       	adc	r21, r1
 1e2:	2f 5f       	subi	r18, 0xFF	; 255
 1e4:	f4 cf       	rjmp	.-24     	; 0x1ce <_Z16base_ADC_measurev+0x6>
 1e6:	24 e6       	ldi	r18, 0x64	; 100
 1e8:	30 e0       	ldi	r19, 0x00	; 0
 1ea:	ca 01       	movw	r24, r20
 1ec:	b9 01       	movw	r22, r18
 1ee:	3d d1       	rcall	.+634    	; 0x46a <__udivmodhi4>
 1f0:	cb 01       	movw	r24, r22
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	86 0f       	add	r24, r22
 1f8:	97 1f       	adc	r25, r23
 1fa:	88 0f       	add	r24, r24
 1fc:	99 1f       	adc	r25, r25
 1fe:	82 95       	swap	r24
 200:	92 95       	swap	r25
 202:	90 7f       	andi	r25, 0xF0	; 240
 204:	98 27       	eor	r25, r24
 206:	80 7f       	andi	r24, 0xF0	; 240
 208:	98 27       	eor	r25, r24
 20a:	86 1b       	sub	r24, r22
 20c:	97 0b       	sbc	r25, r23
 20e:	b9 01       	movw	r22, r18
 210:	2c d1       	rcall	.+600    	; 0x46a <__udivmodhi4>
 212:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <__DATA_REGION_ORIGIN__>
 216:	08 95       	ret

00000218 <_Z17get_button_statusv>:
}

bool get_button_status(){ //read the current button status
	ADCSRA |= (1 << ADSC);
 218:	86 b1       	in	r24, 0x06	; 6
 21a:	80 64       	ori	r24, 0x40	; 64
 21c:	86 b9       	out	0x06, r24	; 6
	while (ADCSRA & (1 << ADSC) );
 21e:	36 99       	sbic	0x06, 6	; 6
 220:	fe cf       	rjmp	.-4      	; 0x21e <_Z17get_button_statusv+0x6>
	if(ADCH <= ::base_ADC_level){
 222:	95 b1       	in	r25, 0x05	; 5
 224:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 228:	89 17       	cp	r24, r25
 22a:	10 f0       	brcs	.+4      	; 0x230 <_Z17get_button_statusv+0x18>
		return true;
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	08 95       	ret
	}
	else{
		return false;
 230:	80 e0       	ldi	r24, 0x00	; 0
	}
}
 232:	08 95       	ret

00000234 <main>:


main()
{
	pinMode(DIN, OUTPUT);
 234:	61 e0       	ldi	r22, 0x01	; 1
 236:	82 eb       	ldi	r24, 0xB2	; 178
 238:	03 df       	rcall	.-506    	; 0x40 <_Z7pinModehh>
	pinMode(IMP, OUTPUT);
 23a:	61 e0       	ldi	r22, 0x01	; 1
 23c:	87 ea       	ldi	r24, 0xA7	; 167
 23e:	00 df       	rcall	.-512    	; 0x40 <_Z7pinModehh>

	pinMode(BTN, INPUT);
 240:	60 e0       	ldi	r22, 0x00	; 0
 242:	83 ea       	ldi	r24, 0xA3	; 163
 244:	fd de       	rcall	.-518    	; 0x40 <_Z7pinModehh>
	digitalWrite(BTN, HIGH);
 246:	61 e0       	ldi	r22, 0x01	; 1
 248:	83 ea       	ldi	r24, 0xA3	; 163
 24a:	1c df       	rcall	.-456    	; 0x84 <_Z12digitalWritehh>
	ADC_init();
 24c:	b6 df       	rcall	.-148    	; 0x1ba <_Z8ADC_initv>
	PWM_generation();
 24e:	52 df       	rcall	.-348    	; 0xf4 <_Z14PWM_generationv>
	base_ADC_measure();
 250:	bb df       	rcall	.-138    	; 0x1c8 <_Z16base_ADC_measurev>


	int8_t dir = 1;
	bool btn_status = false, btn_press = false, turn_off = false;

	uint8_t cur_g = EEPROM_read(0);
 252:	80 e0       	ldi	r24, 0x00	; 0
 254:	65 df       	rcall	.-310    	; 0x120 <_Z11EEPROM_readh>
 256:	68 2e       	mov	r6, r24
	uint8_t cur_r = EEPROM_read(1);
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	62 df       	rcall	.-316    	; 0x120 <_Z11EEPROM_readh>
 25c:	48 2e       	mov	r4, r24
	uint8_t cur_b = EEPROM_read(2);
 25e:	82 e0       	ldi	r24, 0x02	; 2
 260:	5f df       	rcall	.-322    	; 0x120 <_Z11EEPROM_readh>
 262:	38 2e       	mov	r3, r24
	uint8_t stage = EEPROM_read(3);
 264:	83 e0       	ldi	r24, 0x03	; 3
 266:	5c df       	rcall	.-328    	; 0x120 <_Z11EEPROM_readh>
 268:	98 2e       	mov	r9, r24
	uint8_t brt = EEPROM_read(4);
 26a:	84 e0       	ldi	r24, 0x04	; 4
 26c:	59 df       	rcall	.-334    	; 0x120 <_Z11EEPROM_readh>
 26e:	e8 2e       	mov	r14, r24
	uint16_t last_stage_time = EEPROM_read(5);
 270:	85 e0       	ldi	r24, 0x05	; 5
 272:	56 df       	rcall	.-340    	; 0x120 <_Z11EEPROM_readh>
 274:	a8 2e       	mov	r10, r24
 276:	b1 2c       	mov	r11, r1
	uint16_t cur_stage_time = EEPROM_read(6);
 278:	86 e0       	ldi	r24, 0x06	; 6
 27a:	52 df       	rcall	.-348    	; 0x120 <_Z11EEPROM_readh>
 27c:	c8 2e       	mov	r12, r24
 27e:	d1 2c       	mov	r13, r1
	uint16_t timebase = 0;
 280:	c0 e0       	ldi	r28, 0x00	; 0
 282:	d0 e0       	ldi	r29, 0x00	; 0
	PWM_generation();
	base_ADC_measure();


	int8_t dir = 1;
	bool btn_status = false, btn_press = false, turn_off = false;
 284:	71 2c       	mov	r7, r1
 286:	f1 2c       	mov	r15, r1
 288:	81 2c       	mov	r8, r1
	ADC_init();
	PWM_generation();
	base_ADC_measure();


	int8_t dir = 1;
 28a:	55 24       	eor	r5, r5
 28c:	53 94       	inc	r5
	uint16_t timebase = 0;
	while (1)
	{

		
		if (get_button_status())	{
 28e:	c4 df       	rcall	.-120    	; 0x218 <_Z17get_button_statusv>
 290:	88 23       	and	r24, r24
 292:	09 f4       	brne	.+2      	; 0x296 <main+0x62>
 294:	db c0       	rjmp	.+438    	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
			
			timebase++;
 296:	8e 01       	movw	r16, r28
 298:	0f 5f       	subi	r16, 0xFF	; 255
 29a:	1f 4f       	sbci	r17, 0xFF	; 255

			if (timebase >= 50 && timebase < 1000 && btn_press == false){ //turning on or off the lights
 29c:	e1 97       	sbiw	r28, 0x31	; 49
 29e:	c6 3b       	cpi	r28, 0xB6	; 182
 2a0:	d3 40       	sbci	r29, 0x03	; 3
 2a2:	08 f0       	brcs	.+2      	; 0x2a6 <main+0x72>
 2a4:	42 c0       	rjmp	.+132    	; 0x32a <main+0xf6>
 2a6:	f1 10       	cpse	r15, r1
 2a8:	40 c0       	rjmp	.+128    	; 0x32a <main+0xf6>
				
				if (btn_status == false){//turning on the lights
 2aa:	81 10       	cpse	r8, r1
 2ac:	14 c0       	rjmp	.+40     	; 0x2d6 <main+0xa2>
					
					send_GRB(cur_g, cur_r, cur_b);
 2ae:	43 2d       	mov	r20, r3
 2b0:	64 2d       	mov	r22, r4
 2b2:	86 2d       	mov	r24, r6
 2b4:	6b df       	rcall	.-298    	; 0x18c <_Z8send_GRBhhh>
					btn_status = !btn_status;
 2b6:	81 e0       	ldi	r24, 0x01	; 1
 2b8:	88 26       	eor	r8, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ba:	8f e7       	ldi	r24, 0x7F	; 127
 2bc:	9a e1       	ldi	r25, 0x1A	; 26
 2be:	26 e0       	ldi	r18, 0x06	; 6
 2c0:	81 50       	subi	r24, 0x01	; 1
 2c2:	90 40       	sbci	r25, 0x00	; 0
 2c4:	20 40       	sbci	r18, 0x00	; 0
 2c6:	e1 f7       	brne	.-8      	; 0x2c0 <main+0x8c>
 2c8:	00 c0       	rjmp	.+0      	; 0x2ca <main+0x96>
 2ca:	00 00       	nop
	{

		
		if (get_button_status())	{
			
			timebase++;
 2cc:	e8 01       	movw	r28, r16
				if (btn_status == false){//turning on the lights
					
					send_GRB(cur_g, cur_r, cur_b);
					btn_status = !btn_status;
					btn_press = true;
					turn_off = false;
 2ce:	71 2c       	mov	r7, r1
				
				if (btn_status == false){//turning on the lights
					
					send_GRB(cur_g, cur_r, cur_b);
					btn_status = !btn_status;
					btn_press = true;
 2d0:	ff 24       	eor	r15, r15
 2d2:	f3 94       	inc	r15
 2d4:	c3 c0       	rjmp	.+390    	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
					turn_off = false;
					_delay_ms(100);
				}
				else { //turning off the lights
					send_GRB(0,0,0);
 2d6:	40 e0       	ldi	r20, 0x00	; 0
 2d8:	60 e0       	ldi	r22, 0x00	; 0
 2da:	80 e0       	ldi	r24, 0x00	; 0
 2dc:	57 df       	rcall	.-338    	; 0x18c <_Z8send_GRBhhh>
					EEPROM_write(cur_g, 0);
 2de:	60 e0       	ldi	r22, 0x00	; 0
 2e0:	86 2d       	mov	r24, r6
 2e2:	10 df       	rcall	.-480    	; 0x104 <_Z12EEPROM_writehh>
					EEPROM_write(cur_r, 1);
 2e4:	61 e0       	ldi	r22, 0x01	; 1
 2e6:	84 2d       	mov	r24, r4
 2e8:	0d df       	rcall	.-486    	; 0x104 <_Z12EEPROM_writehh>
					EEPROM_write(cur_b, 2);
 2ea:	62 e0       	ldi	r22, 0x02	; 2
 2ec:	83 2d       	mov	r24, r3
 2ee:	0a df       	rcall	.-492    	; 0x104 <_Z12EEPROM_writehh>
					EEPROM_write(stage, 3);
 2f0:	63 e0       	ldi	r22, 0x03	; 3
 2f2:	89 2d       	mov	r24, r9
 2f4:	07 df       	rcall	.-498    	; 0x104 <_Z12EEPROM_writehh>
					EEPROM_write(brt, 4);
 2f6:	64 e0       	ldi	r22, 0x04	; 4
 2f8:	8e 2d       	mov	r24, r14
 2fa:	04 df       	rcall	.-504    	; 0x104 <_Z12EEPROM_writehh>
					EEPROM_write(last_stage_time, 5);
 2fc:	65 e0       	ldi	r22, 0x05	; 5
 2fe:	8a 2d       	mov	r24, r10
 300:	01 df       	rcall	.-510    	; 0x104 <_Z12EEPROM_writehh>
					EEPROM_write(cur_stage_time, 6);
 302:	66 e0       	ldi	r22, 0x06	; 6
 304:	8c 2d       	mov	r24, r12
 306:	fe de       	rcall	.-516    	; 0x104 <_Z12EEPROM_writehh>
					btn_status = !btn_status;
 308:	81 e0       	ldi	r24, 0x01	; 1
 30a:	88 26       	eor	r8, r24
 30c:	8f e7       	ldi	r24, 0x7F	; 127
 30e:	9a e1       	ldi	r25, 0x1A	; 26
 310:	26 e0       	ldi	r18, 0x06	; 6
 312:	81 50       	subi	r24, 0x01	; 1
 314:	90 40       	sbci	r25, 0x00	; 0
 316:	20 40       	sbci	r18, 0x00	; 0
 318:	e1 f7       	brne	.-8      	; 0x312 <main+0xde>
 31a:	00 c0       	rjmp	.+0      	; 0x31c <main+0xe8>
 31c:	00 00       	nop
	{

		
		if (get_button_status())	{
			
			timebase++;
 31e:	e8 01       	movw	r28, r16
					EEPROM_write(brt, 4);
					EEPROM_write(last_stage_time, 5);
					EEPROM_write(cur_stage_time, 6);
					btn_status = !btn_status;
					btn_press = true;
					turn_off = true;
 320:	77 24       	eor	r7, r7
 322:	73 94       	inc	r7
					EEPROM_write(stage, 3);
					EEPROM_write(brt, 4);
					EEPROM_write(last_stage_time, 5);
					EEPROM_write(cur_stage_time, 6);
					btn_status = !btn_status;
					btn_press = true;
 324:	ff 24       	eor	r15, r15
 326:	f3 94       	inc	r15
 328:	99 c0       	rjmp	.+306    	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
					turn_off = true;
					_delay_ms(100);
				}
			}
			else if (timebase >= 1000 && turn_off == false) //start the color changing procedure
 32a:	08 3e       	cpi	r16, 0xE8	; 232
 32c:	83 e0       	ldi	r24, 0x03	; 3
 32e:	18 07       	cpc	r17, r24
 330:	08 f4       	brcc	.+2      	; 0x334 <main+0x100>
 332:	91 c0       	rjmp	.+290    	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 334:	71 10       	cpse	r7, r1
 336:	91 c0       	rjmp	.+290    	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
			{
				if (last_stage_time != 0){
 338:	a1 14       	cp	r10, r1
 33a:	b1 04       	cpc	r11, r1
 33c:	31 f0       	breq	.+12     	; 0x34a <main+0x116>
					timebase += last_stage_time;
 33e:	e5 01       	movw	r28, r10
 340:	c0 0f       	add	r28, r16
 342:	d1 1f       	adc	r29, r17
					last_stage_time = 0;
 344:	a1 2c       	mov	r10, r1
 346:	b1 2c       	mov	r11, r1
 348:	01 c0       	rjmp	.+2      	; 0x34c <main+0x118>
	{

		
		if (get_button_status())	{
			
			timebase++;
 34a:	e8 01       	movw	r28, r16
				if (last_stage_time != 0){
					timebase += last_stage_time;
					last_stage_time = 0;
				}
				
				brt += dir;
 34c:	e5 0c       	add	r14, r5
				if (brt >= 255) {
 34e:	9f ef       	ldi	r25, 0xFF	; 255
 350:	e9 16       	cp	r14, r25
 352:	19 f0       	breq	.+6      	; 0x35a <main+0x126>
					
					dir = -1;
				}
				else if (brt == 0) {
 354:	ee 20       	and	r14, r14
 356:	21 f0       	breq	.+8      	; 0x360 <main+0x12c>
 358:	05 c0       	rjmp	.+10     	; 0x364 <main+0x130>
				}
				
				brt += dir;
				if (brt >= 255) {
					
					dir = -1;
 35a:	55 24       	eor	r5, r5
 35c:	5a 94       	dec	r5
 35e:	02 c0       	rjmp	.+4      	; 0x364 <main+0x130>
				}
				else if (brt == 0) {
					
					dir = 1;
 360:	55 24       	eor	r5, r5
 362:	53 94       	inc	r5
				}
				cur_stage_time++;
 364:	2f ef       	ldi	r18, 0xFF	; 255
 366:	c2 1a       	sub	r12, r18
 368:	d2 0a       	sbc	r13, r18
				// time the animation
				if (timebase > 1509) {
 36a:	c6 3e       	cpi	r28, 0xE6	; 230
 36c:	85 e0       	ldi	r24, 0x05	; 5
 36e:	d8 07       	cpc	r29, r24
 370:	a0 f0       	brcs	.+40     	; 0x39a <main+0x166>
					cur_stage_time=0;
					timebase = 1000;

					stage += 1;
 372:	93 94       	inc	r9
					brt = 0;
					dir = 1;
					if (stage >= 8) {
 374:	97 e0       	ldi	r25, 0x07	; 7
 376:	99 15       	cp	r25, r9
 378:	40 f0       	brcs	.+16     	; 0x38a <main+0x156>
				}
				cur_stage_time++;
				// time the animation
				if (timebase > 1509) {
					cur_stage_time=0;
					timebase = 1000;
 37a:	c8 ee       	ldi	r28, 0xE8	; 232
 37c:	d3 e0       	ldi	r29, 0x03	; 3
					dir = 1;
				}
				cur_stage_time++;
				// time the animation
				if (timebase > 1509) {
					cur_stage_time=0;
 37e:	c1 2c       	mov	r12, r1
 380:	d1 2c       	mov	r13, r1
					timebase = 1000;

					stage += 1;
					brt = 0;
 382:	e1 2c       	mov	r14, r1
					dir = 1;
 384:	55 24       	eor	r5, r5
 386:	53 94       	inc	r5
 388:	08 c0       	rjmp	.+16     	; 0x39a <main+0x166>
				}
				cur_stage_time++;
				// time the animation
				if (timebase > 1509) {
					cur_stage_time=0;
					timebase = 1000;
 38a:	c8 ee       	ldi	r28, 0xE8	; 232
 38c:	d3 e0       	ldi	r29, 0x03	; 3
					dir = 1;
				}
				cur_stage_time++;
				// time the animation
				if (timebase > 1509) {
					cur_stage_time=0;
 38e:	c1 2c       	mov	r12, r1
 390:	d1 2c       	mov	r13, r1
					timebase = 1000;

					stage += 1;
					brt = 0;
 392:	e1 2c       	mov	r14, r1
					dir = 1;
					if (stage >= 8) {
						stage = 0;
 394:	91 2c       	mov	r9, r1
					cur_stage_time=0;
					timebase = 1000;

					stage += 1;
					brt = 0;
					dir = 1;
 396:	55 24       	eor	r5, r5
 398:	53 94       	inc	r5
						stage = 0;
					}
				}


				if (stage == 0) { //red
 39a:	91 10       	cpse	r9, r1
 39c:	08 c0       	rjmp	.+16     	; 0x3ae <main+0x17a>
					send_GRB(0,brt,0);
 39e:	40 e0       	ldi	r20, 0x00	; 0
 3a0:	6e 2d       	mov	r22, r14
 3a2:	80 e0       	ldi	r24, 0x00	; 0
 3a4:	f3 de       	rcall	.-538    	; 0x18c <_Z8send_GRBhhh>
					cur_g = 0;
					cur_r = brt;
 3a6:	4e 2c       	mov	r4, r14
					cur_b = 0;
 3a8:	31 2c       	mov	r3, r1
				}


				if (stage == 0) { //red
					send_GRB(0,brt,0);
					cur_g = 0;
 3aa:	61 2c       	mov	r6, r1
 3ac:	57 c0       	rjmp	.+174    	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
					cur_r = brt;
					cur_b = 0;

					} else if (stage == 1) { //orange
 3ae:	21 e0       	ldi	r18, 0x01	; 1
 3b0:	92 12       	cpse	r9, r18
 3b2:	09 c0       	rjmp	.+18     	; 0x3c6 <main+0x192>
					send_GRB(brt / 2,brt,0);
 3b4:	6e 2c       	mov	r6, r14
 3b6:	66 94       	lsr	r6
 3b8:	40 e0       	ldi	r20, 0x00	; 0
 3ba:	6e 2d       	mov	r22, r14
 3bc:	86 2d       	mov	r24, r6
 3be:	e6 de       	rcall	.-564    	; 0x18c <_Z8send_GRBhhh>
					cur_g = brt / 2;
					cur_r = brt;
 3c0:	4e 2c       	mov	r4, r14
					cur_b = 0;
 3c2:	31 2c       	mov	r3, r1
 3c4:	4b c0       	rjmp	.+150    	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>

					} else if (stage == 2) {//yellow
 3c6:	82 e0       	ldi	r24, 0x02	; 2
 3c8:	98 12       	cpse	r9, r24
 3ca:	08 c0       	rjmp	.+16     	; 0x3dc <main+0x1a8>
					send_GRB(brt,brt,0);
 3cc:	40 e0       	ldi	r20, 0x00	; 0
 3ce:	6e 2d       	mov	r22, r14
 3d0:	8e 2d       	mov	r24, r14
 3d2:	dc de       	rcall	.-584    	; 0x18c <_Z8send_GRBhhh>
					cur_g = brt;
					cur_r = brt;
 3d4:	4e 2c       	mov	r4, r14
					cur_r = brt;
					cur_b = 0;

					} else if (stage == 2) {//yellow
					send_GRB(brt,brt,0);
					cur_g = brt;
 3d6:	6e 2c       	mov	r6, r14
					cur_r = brt;
					cur_b = 0;
 3d8:	31 2c       	mov	r3, r1
 3da:	40 c0       	rjmp	.+128    	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>

					} else if (stage == 3) {//green
 3dc:	93 e0       	ldi	r25, 0x03	; 3
 3de:	99 12       	cpse	r9, r25
 3e0:	08 c0       	rjmp	.+16     	; 0x3f2 <main+0x1be>
					send_GRB(brt,0,0);
 3e2:	40 e0       	ldi	r20, 0x00	; 0
 3e4:	60 e0       	ldi	r22, 0x00	; 0
 3e6:	8e 2d       	mov	r24, r14
 3e8:	d1 de       	rcall	.-606    	; 0x18c <_Z8send_GRBhhh>
					cur_g = brt;
 3ea:	6e 2c       	mov	r6, r14
					cur_r = 0;
					cur_b = 0;
 3ec:	31 2c       	mov	r3, r1
					cur_b = 0;

					} else if (stage == 3) {//green
					send_GRB(brt,0,0);
					cur_g = brt;
					cur_r = 0;
 3ee:	41 2c       	mov	r4, r1
 3f0:	35 c0       	rjmp	.+106    	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
					cur_b = 0;

					} else if (stage == 4) {//light blue
 3f2:	24 e0       	ldi	r18, 0x04	; 4
 3f4:	92 12       	cpse	r9, r18
 3f6:	08 c0       	rjmp	.+16     	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
					send_GRB(brt,0, brt);
 3f8:	4e 2d       	mov	r20, r14
 3fa:	60 e0       	ldi	r22, 0x00	; 0
 3fc:	8e 2d       	mov	r24, r14
 3fe:	c6 de       	rcall	.-628    	; 0x18c <_Z8send_GRBhhh>
					cur_g = brt;
					cur_r = 0;
					cur_b = brt;
 400:	3e 2c       	mov	r3, r14
					cur_r = 0;
					cur_b = 0;

					} else if (stage == 4) {//light blue
					send_GRB(brt,0, brt);
					cur_g = brt;
 402:	6e 2c       	mov	r6, r14
					cur_r = 0;
 404:	41 2c       	mov	r4, r1
 406:	2a c0       	rjmp	.+84     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
					cur_b = brt;
					} else if (stage == 5) {// blue
 408:	85 e0       	ldi	r24, 0x05	; 5
 40a:	98 12       	cpse	r9, r24
 40c:	08 c0       	rjmp	.+16     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
					send_GRB(0, 0, brt);
 40e:	4e 2d       	mov	r20, r14
 410:	60 e0       	ldi	r22, 0x00	; 0
 412:	80 e0       	ldi	r24, 0x00	; 0
 414:	bb de       	rcall	.-650    	; 0x18c <_Z8send_GRBhhh>
					cur_g = 0;
					cur_r = 0;
					cur_b = brt;
 416:	3e 2c       	mov	r3, r14
					cur_r = 0;
					cur_b = brt;
					} else if (stage == 5) {// blue
					send_GRB(0, 0, brt);
					cur_g = 0;
					cur_r = 0;
 418:	41 2c       	mov	r4, r1
					cur_g = brt;
					cur_r = 0;
					cur_b = brt;
					} else if (stage == 5) {// blue
					send_GRB(0, 0, brt);
					cur_g = 0;
 41a:	61 2c       	mov	r6, r1
 41c:	1f c0       	rjmp	.+62     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
					cur_r = 0;
					cur_b = brt;

					} else if (stage == 6) {//purple
 41e:	96 e0       	ldi	r25, 0x06	; 6
 420:	99 12       	cpse	r9, r25
 422:	09 c0       	rjmp	.+18     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
					send_GRB(0, brt / 2, brt);
 424:	4e 2c       	mov	r4, r14
 426:	46 94       	lsr	r4
 428:	4e 2d       	mov	r20, r14
 42a:	64 2d       	mov	r22, r4
 42c:	80 e0       	ldi	r24, 0x00	; 0
 42e:	ae de       	rcall	.-676    	; 0x18c <_Z8send_GRBhhh>
					cur_g = 0;
					cur_r = brt / 2;
					cur_b = brt;
 430:	3e 2c       	mov	r3, r14
					cur_r = 0;
					cur_b = brt;

					} else if (stage == 6) {//purple
					send_GRB(0, brt / 2, brt);
					cur_g = 0;
 432:	61 2c       	mov	r6, r1
 434:	13 c0       	rjmp	.+38     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
					cur_r = brt / 2;
					cur_b = brt;

					} else if (stage == 7) {//white
 436:	27 e0       	ldi	r18, 0x07	; 7
 438:	92 12       	cpse	r9, r18
 43a:	10 c0       	rjmp	.+32     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
					send_GRB(brt, brt, brt);
 43c:	4e 2d       	mov	r20, r14
 43e:	6e 2d       	mov	r22, r14
 440:	8e 2d       	mov	r24, r14
 442:	a4 de       	rcall	.-696    	; 0x18c <_Z8send_GRBhhh>
					cur_g = brt;
					cur_r = brt;
					cur_b = brt;
 444:	3e 2c       	mov	r3, r14
					cur_b = brt;

					} else if (stage == 7) {//white
					send_GRB(brt, brt, brt);
					cur_g = brt;
					cur_r = brt;
 446:	4e 2c       	mov	r4, r14
					cur_r = brt / 2;
					cur_b = brt;

					} else if (stage == 7) {//white
					send_GRB(brt, brt, brt);
					cur_g = brt;
 448:	6e 2c       	mov	r6, r14
 44a:	08 c0       	rjmp	.+16     	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
		}
		else {

			btn_press = false;
			timebase = 0;
			last_stage_time = cur_stage_time;
 44c:	56 01       	movw	r10, r12
			}
		}
		else {

			btn_press = false;
			timebase = 0;
 44e:	c0 e0       	ldi	r28, 0x00	; 0
 450:	d0 e0       	ldi	r29, 0x00	; 0
				}
			}
		}
		else {

			btn_press = false;
 452:	f1 2c       	mov	r15, r1
 454:	03 c0       	rjmp	.+6      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
	{

		
		if (get_button_status())	{
			
			timebase++;
 456:	e8 01       	movw	r28, r16
 458:	01 c0       	rjmp	.+2      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
 45a:	e8 01       	movw	r28, r16
 45c:	87 e8       	ldi	r24, 0x87	; 135
 45e:	93 e1       	ldi	r25, 0x13	; 19
 460:	01 97       	sbiw	r24, 0x01	; 1
 462:	f1 f7       	brne	.-4      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
 464:	00 c0       	rjmp	.+0      	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 466:	00 00       	nop
 468:	12 cf       	rjmp	.-476    	; 0x28e <main+0x5a>

0000046a <__udivmodhi4>:
 46a:	aa 1b       	sub	r26, r26
 46c:	bb 1b       	sub	r27, r27
 46e:	51 e1       	ldi	r21, 0x11	; 17
 470:	07 c0       	rjmp	.+14     	; 0x480 <__udivmodhi4_ep>

00000472 <__udivmodhi4_loop>:
 472:	aa 1f       	adc	r26, r26
 474:	bb 1f       	adc	r27, r27
 476:	a6 17       	cp	r26, r22
 478:	b7 07       	cpc	r27, r23
 47a:	10 f0       	brcs	.+4      	; 0x480 <__udivmodhi4_ep>
 47c:	a6 1b       	sub	r26, r22
 47e:	b7 0b       	sbc	r27, r23

00000480 <__udivmodhi4_ep>:
 480:	88 1f       	adc	r24, r24
 482:	99 1f       	adc	r25, r25
 484:	5a 95       	dec	r21
 486:	a9 f7       	brne	.-22     	; 0x472 <__udivmodhi4_loop>
 488:	80 95       	com	r24
 48a:	90 95       	com	r25
 48c:	bc 01       	movw	r22, r24
 48e:	cd 01       	movw	r24, r26
 490:	08 95       	ret

00000492 <_exit>:
 492:	f8 94       	cli

00000494 <__stop_program>:
 494:	ff cf       	rjmp	.-2      	; 0x494 <__stop_program>
