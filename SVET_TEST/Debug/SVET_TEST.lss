
SVET_TEST.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000466  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000004da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  000004da  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004da  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000050c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000090  00000000  00000000  00000548  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000df7  00000000  00000000  000005d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000643  00000000  00000000  000013cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000857  00000000  00000000  00001a12  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000120  00000000  00000000  0000226c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e8  00000000  00000000  0000238c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000099b  00000000  00000000  00002974  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  0000330f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	10 c0       	rjmp	.+32     	; 0x22 <__ctors_end>
   2:	1d c0       	rjmp	.+58     	; 0x3e <__bad_interrupt>
   4:	1c c0       	rjmp	.+56     	; 0x3e <__bad_interrupt>
   6:	1b c0       	rjmp	.+54     	; 0x3e <__bad_interrupt>
   8:	1a c0       	rjmp	.+52     	; 0x3e <__bad_interrupt>
   a:	19 c0       	rjmp	.+50     	; 0x3e <__bad_interrupt>
   c:	18 c0       	rjmp	.+48     	; 0x3e <__bad_interrupt>
   e:	17 c0       	rjmp	.+46     	; 0x3e <__bad_interrupt>
  10:	16 c0       	rjmp	.+44     	; 0x3e <__bad_interrupt>
  12:	15 c0       	rjmp	.+42     	; 0x3e <__bad_interrupt>
  14:	14 c0       	rjmp	.+40     	; 0x3e <__bad_interrupt>
  16:	13 c0       	rjmp	.+38     	; 0x3e <__bad_interrupt>
  18:	12 c0       	rjmp	.+36     	; 0x3e <__bad_interrupt>
  1a:	11 c0       	rjmp	.+34     	; 0x3e <__bad_interrupt>
  1c:	10 c0       	rjmp	.+32     	; 0x3e <__bad_interrupt>
  1e:	0f c0       	rjmp	.+30     	; 0x3e <__bad_interrupt>
  20:	0e c0       	rjmp	.+28     	; 0x3e <__bad_interrupt>

00000022 <__ctors_end>:
  22:	11 24       	eor	r1, r1
  24:	1f be       	out	0x3f, r1	; 63
  26:	cf ed       	ldi	r28, 0xDF	; 223
  28:	cd bf       	out	0x3d, r28	; 61

0000002a <__do_clear_bss>:
  2a:	20 e0       	ldi	r18, 0x00	; 0
  2c:	a0 e6       	ldi	r26, 0x60	; 96
  2e:	b0 e0       	ldi	r27, 0x00	; 0
  30:	01 c0       	rjmp	.+2      	; 0x34 <.do_clear_bss_start>

00000032 <.do_clear_bss_loop>:
  32:	1d 92       	st	X+, r1

00000034 <.do_clear_bss_start>:
  34:	a1 36       	cpi	r26, 0x61	; 97
  36:	b2 07       	cpc	r27, r18
  38:	e1 f7       	brne	.-8      	; 0x32 <.do_clear_bss_loop>
  3a:	fc d0       	rcall	.+504    	; 0x234 <main>
  3c:	12 c2       	rjmp	.+1060   	; 0x462 <_exit>

0000003e <__bad_interrupt>:
  3e:	e0 cf       	rjmp	.-64     	; 0x0 <__vectors>

00000040 <_Z7pinModehh>:
	TCCR1B = 0b00000001; // CLK (need more info on frequency)
	//TCCR1C = 0b01000000; // CLK (need more info on frequency)
	TCNT1H=0; //counter starting value
	TCNT1L=0; //counter starting value
	OCR1BH=ADCH; //PWM duty
	OCR1BL=ADCH; //PWM duty
  40:	98 2f       	mov	r25, r24
  42:	90 7f       	andi	r25, 0xF0	; 240
  44:	8f 70       	andi	r24, 0x0F	; 15
  46:	90 3a       	cpi	r25, 0xA0	; 160
  48:	29 f0       	breq	.+10     	; 0x54 <_Z7pinModehh+0x14>
  4a:	90 3b       	cpi	r25, 0xB0	; 176
  4c:	29 f4       	brne	.+10     	; 0x58 <_Z7pinModehh+0x18>
  4e:	e7 e3       	ldi	r30, 0x37	; 55
  50:	f0 e0       	ldi	r31, 0x00	; 0
  52:	02 c0       	rjmp	.+4      	; 0x58 <_Z7pinModehh+0x18>
  54:	ea e3       	ldi	r30, 0x3A	; 58
  56:	f0 e0       	ldi	r31, 0x00	; 0
  58:	90 81       	ld	r25, Z
  5a:	21 e0       	ldi	r18, 0x01	; 1
  5c:	30 e0       	ldi	r19, 0x00	; 0
  5e:	08 2e       	mov	r0, r24
  60:	02 c0       	rjmp	.+4      	; 0x66 <_Z7pinModehh+0x26>
  62:	22 0f       	add	r18, r18
  64:	33 1f       	adc	r19, r19
  66:	0a 94       	dec	r0
  68:	e2 f7       	brpl	.-8      	; 0x62 <_Z7pinModehh+0x22>
  6a:	20 95       	com	r18
  6c:	29 23       	and	r18, r25
  6e:	62 30       	cpi	r22, 0x02	; 2
  70:	40 f4       	brcc	.+16     	; 0x82 <__DATA_REGION_LENGTH__+0x2>
  72:	70 e0       	ldi	r23, 0x00	; 0
  74:	02 c0       	rjmp	.+4      	; 0x7a <_Z7pinModehh+0x3a>
  76:	66 0f       	add	r22, r22
  78:	77 1f       	adc	r23, r23
  7a:	8a 95       	dec	r24
  7c:	e2 f7       	brpl	.-8      	; 0x76 <_Z7pinModehh+0x36>
  7e:	26 2b       	or	r18, r22
  80:	20 83       	st	Z, r18
  82:	08 95       	ret

00000084 <_Z12digitalWritehh>:
  84:	98 2f       	mov	r25, r24
  86:	90 7f       	andi	r25, 0xF0	; 240
  88:	8f 70       	andi	r24, 0x0F	; 15
  8a:	90 3a       	cpi	r25, 0xA0	; 160
  8c:	29 f0       	breq	.+10     	; 0x98 <_Z12digitalWritehh+0x14>
  8e:	90 3b       	cpi	r25, 0xB0	; 176
  90:	29 f4       	brne	.+10     	; 0x9c <_Z12digitalWritehh+0x18>
  92:	e8 e3       	ldi	r30, 0x38	; 56
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	02 c0       	rjmp	.+4      	; 0x9c <_Z12digitalWritehh+0x18>
  98:	eb e3       	ldi	r30, 0x3B	; 59
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	90 81       	ld	r25, Z
  9e:	21 e0       	ldi	r18, 0x01	; 1
  a0:	30 e0       	ldi	r19, 0x00	; 0
  a2:	08 2e       	mov	r0, r24
  a4:	02 c0       	rjmp	.+4      	; 0xaa <_Z12digitalWritehh+0x26>
  a6:	22 0f       	add	r18, r18
  a8:	33 1f       	adc	r19, r19
  aa:	0a 94       	dec	r0
  ac:	e2 f7       	brpl	.-8      	; 0xa6 <_Z12digitalWritehh+0x22>
  ae:	20 95       	com	r18
  b0:	29 23       	and	r18, r25
  b2:	62 30       	cpi	r22, 0x02	; 2
  b4:	40 f4       	brcc	.+16     	; 0xc6 <_Z12digitalWritehh+0x42>
  b6:	70 e0       	ldi	r23, 0x00	; 0
  b8:	02 c0       	rjmp	.+4      	; 0xbe <_Z12digitalWritehh+0x3a>
  ba:	66 0f       	add	r22, r22
  bc:	77 1f       	adc	r23, r23
  be:	8a 95       	dec	r24
  c0:	e2 f7       	brpl	.-8      	; 0xba <_Z12digitalWritehh+0x36>
  c2:	26 2b       	or	r18, r22
  c4:	20 83       	st	Z, r18
  c6:	08 95       	ret

000000c8 <_Z15set_H_and_delayv>:
  c8:	88 b3       	in	r24, 0x18	; 24
  ca:	84 60       	ori	r24, 0x04	; 4
  cc:	88 bb       	out	0x18, r24	; 24
  ce:	86 e0       	ldi	r24, 0x06	; 6
  d0:	8a 95       	dec	r24
  d2:	f1 f7       	brne	.-4      	; 0xd0 <_Z15set_H_and_delayv+0x8>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <_Z15set_H_and_delayv+0xe>
  d6:	88 b3       	in	r24, 0x18	; 24
  d8:	8b 7f       	andi	r24, 0xFB	; 251
  da:	88 bb       	out	0x18, r24	; 24
  dc:	08 95       	ret

000000de <_Z15set_L_and_delayv>:
  de:	88 b3       	in	r24, 0x18	; 24
  e0:	84 60       	ori	r24, 0x04	; 4
  e2:	88 bb       	out	0x18, r24	; 24
  e4:	88 b3       	in	r24, 0x18	; 24
  e6:	8b 7f       	andi	r24, 0xFB	; 251
  e8:	88 bb       	out	0x18, r24	; 24
  ea:	86 e0       	ldi	r24, 0x06	; 6
  ec:	8a 95       	dec	r24
  ee:	f1 f7       	brne	.-4      	; 0xec <__stack+0xd>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <__stack+0x13>
  f2:	08 95       	ret

000000f4 <_Z14PWM_generationv>:
  f4:	83 e2       	ldi	r24, 0x23	; 35
  f6:	80 bf       	out	0x30, r24	; 48
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	83 bf       	out	0x33, r24	; 51
  fc:	12 be       	out	0x32, r1	; 50
  fe:	8f e7       	ldi	r24, 0x7F	; 127
 100:	8c bf       	out	0x3c, r24	; 60
 102:	08 95       	ret

00000104 <_Z12EEPROM_writehh>:
 104:	e1 99       	sbic	0x1c, 1	; 28
 106:	fe cf       	rjmp	.-4      	; 0x104 <_Z12EEPROM_writehh>
 108:	1c ba       	out	0x1c, r1	; 28
 10a:	70 e0       	ldi	r23, 0x00	; 0
 10c:	7f bb       	out	0x1f, r23	; 31
 10e:	6e bb       	out	0x1e, r22	; 30
 110:	8d bb       	out	0x1d, r24	; 29
 112:	8c b3       	in	r24, 0x1c	; 28
 114:	84 60       	ori	r24, 0x04	; 4
 116:	8c bb       	out	0x1c, r24	; 28
 118:	8c b3       	in	r24, 0x1c	; 28
 11a:	82 60       	ori	r24, 0x02	; 2
 11c:	8c bb       	out	0x1c, r24	; 28
 11e:	08 95       	ret

00000120 <_Z11EEPROM_readh>:
 120:	e1 99       	sbic	0x1c, 1	; 28
 122:	fe cf       	rjmp	.-4      	; 0x120 <_Z11EEPROM_readh>
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	9f bb       	out	0x1f, r25	; 31
 128:	8e bb       	out	0x1e, r24	; 30
 12a:	8c b3       	in	r24, 0x1c	; 28
 12c:	81 60       	ori	r24, 0x01	; 1
 12e:	8c bb       	out	0x1c, r24	; 28
 130:	8d b3       	in	r24, 0x1d	; 29
 132:	08 95       	ret

00000134 <_Z9send_byteh>:
 134:	cf 93       	push	r28
 136:	c8 2f       	mov	r28, r24
 138:	88 23       	and	r24, r24
 13a:	14 f4       	brge	.+4      	; 0x140 <_Z9send_byteh+0xc>
 13c:	c5 df       	rcall	.-118    	; 0xc8 <_Z15set_H_and_delayv>
 13e:	01 c0       	rjmp	.+2      	; 0x142 <_Z9send_byteh+0xe>
 140:	ce df       	rcall	.-100    	; 0xde <_Z15set_L_and_delayv>
 142:	c6 ff       	sbrs	r28, 6
 144:	02 c0       	rjmp	.+4      	; 0x14a <_Z9send_byteh+0x16>
 146:	c0 df       	rcall	.-128    	; 0xc8 <_Z15set_H_and_delayv>
 148:	01 c0       	rjmp	.+2      	; 0x14c <_Z9send_byteh+0x18>
 14a:	c9 df       	rcall	.-110    	; 0xde <_Z15set_L_and_delayv>
 14c:	c5 ff       	sbrs	r28, 5
 14e:	02 c0       	rjmp	.+4      	; 0x154 <_Z9send_byteh+0x20>
 150:	bb df       	rcall	.-138    	; 0xc8 <_Z15set_H_and_delayv>
 152:	01 c0       	rjmp	.+2      	; 0x156 <_Z9send_byteh+0x22>
 154:	c4 df       	rcall	.-120    	; 0xde <_Z15set_L_and_delayv>
 156:	c4 ff       	sbrs	r28, 4
 158:	02 c0       	rjmp	.+4      	; 0x15e <_Z9send_byteh+0x2a>
 15a:	b6 df       	rcall	.-148    	; 0xc8 <_Z15set_H_and_delayv>
 15c:	01 c0       	rjmp	.+2      	; 0x160 <_Z9send_byteh+0x2c>
 15e:	bf df       	rcall	.-130    	; 0xde <_Z15set_L_and_delayv>
 160:	c3 ff       	sbrs	r28, 3
 162:	02 c0       	rjmp	.+4      	; 0x168 <_Z9send_byteh+0x34>
 164:	b1 df       	rcall	.-158    	; 0xc8 <_Z15set_H_and_delayv>
 166:	01 c0       	rjmp	.+2      	; 0x16a <_Z9send_byteh+0x36>
 168:	ba df       	rcall	.-140    	; 0xde <_Z15set_L_and_delayv>
 16a:	c2 ff       	sbrs	r28, 2
 16c:	02 c0       	rjmp	.+4      	; 0x172 <_Z9send_byteh+0x3e>
 16e:	ac df       	rcall	.-168    	; 0xc8 <_Z15set_H_and_delayv>
 170:	01 c0       	rjmp	.+2      	; 0x174 <_Z9send_byteh+0x40>
 172:	b5 df       	rcall	.-150    	; 0xde <_Z15set_L_and_delayv>
 174:	c1 ff       	sbrs	r28, 1
 176:	02 c0       	rjmp	.+4      	; 0x17c <_Z9send_byteh+0x48>
 178:	a7 df       	rcall	.-178    	; 0xc8 <_Z15set_H_and_delayv>
 17a:	01 c0       	rjmp	.+2      	; 0x17e <_Z9send_byteh+0x4a>
 17c:	b0 df       	rcall	.-160    	; 0xde <_Z15set_L_and_delayv>
 17e:	c0 ff       	sbrs	r28, 0
 180:	02 c0       	rjmp	.+4      	; 0x186 <_Z9send_byteh+0x52>
 182:	a2 df       	rcall	.-188    	; 0xc8 <_Z15set_H_and_delayv>
 184:	01 c0       	rjmp	.+2      	; 0x188 <_Z9send_byteh+0x54>
 186:	ab df       	rcall	.-170    	; 0xde <_Z15set_L_and_delayv>
 188:	cf 91       	pop	r28
 18a:	08 95       	ret

0000018c <_Z8send_GRBhhh>:
 18c:	0f 93       	push	r16
 18e:	1f 93       	push	r17
 190:	cf 93       	push	r28
 192:	df 93       	push	r29
 194:	08 2f       	mov	r16, r24
 196:	16 2f       	mov	r17, r22
 198:	d4 2f       	mov	r29, r20
 19a:	c0 e0       	ldi	r28, 0x00	; 0
 19c:	c0 39       	cpi	r28, 0x90	; 144
 19e:	40 f4       	brcc	.+16     	; 0x1b0 <_Z8send_GRBhhh+0x24>
 1a0:	80 2f       	mov	r24, r16
 1a2:	c8 df       	rcall	.-112    	; 0x134 <_Z9send_byteh>
 1a4:	81 2f       	mov	r24, r17
 1a6:	c6 df       	rcall	.-116    	; 0x134 <_Z9send_byteh>
 1a8:	8d 2f       	mov	r24, r29
 1aa:	c4 df       	rcall	.-120    	; 0x134 <_Z9send_byteh>
 1ac:	cf 5f       	subi	r28, 0xFF	; 255
 1ae:	f6 cf       	rjmp	.-20     	; 0x19c <_Z8send_GRBhhh+0x10>
 1b0:	df 91       	pop	r29
 1b2:	cf 91       	pop	r28
 1b4:	1f 91       	pop	r17
 1b6:	0f 91       	pop	r16
 1b8:	08 95       	ret

000001ba <_Z8ADC_initv>:
 1ba:	82 e0       	ldi	r24, 0x02	; 2
 1bc:	87 b9       	out	0x07, r24	; 7
 1be:	87 e8       	ldi	r24, 0x87	; 135
 1c0:	86 b9       	out	0x06, r24	; 6
 1c2:	80 e1       	ldi	r24, 0x10	; 16
 1c4:	83 b9       	out	0x03, r24	; 3
 1c6:	08 95       	ret

000001c8 <_Z16base_ADC_measurev>:
 1c8:	20 e0       	ldi	r18, 0x00	; 0
 1ca:	40 e0       	ldi	r20, 0x00	; 0
 1cc:	50 e0       	ldi	r21, 0x00	; 0
 1ce:	24 36       	cpi	r18, 0x64	; 100
 1d0:	50 f4       	brcc	.+20     	; 0x1e6 <_Z16base_ADC_measurev+0x1e>
 1d2:	96 b1       	in	r25, 0x06	; 6
 1d4:	90 64       	ori	r25, 0x40	; 64
 1d6:	96 b9       	out	0x06, r25	; 6
 1d8:	36 99       	sbic	0x06, 6	; 6
 1da:	fe cf       	rjmp	.-4      	; 0x1d8 <_Z16base_ADC_measurev+0x10>
 1dc:	85 b1       	in	r24, 0x05	; 5
 1de:	48 0f       	add	r20, r24
 1e0:	51 1d       	adc	r21, r1
 1e2:	2f 5f       	subi	r18, 0xFF	; 255
 1e4:	f4 cf       	rjmp	.-24     	; 0x1ce <_Z16base_ADC_measurev+0x6>
 1e6:	24 e6       	ldi	r18, 0x64	; 100
 1e8:	30 e0       	ldi	r19, 0x00	; 0
 1ea:	ca 01       	movw	r24, r20
 1ec:	b9 01       	movw	r22, r18
 1ee:	25 d1       	rcall	.+586    	; 0x43a <__udivmodhi4>
 1f0:	cb 01       	movw	r24, r22
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	86 0f       	add	r24, r22
 1f8:	97 1f       	adc	r25, r23
 1fa:	88 0f       	add	r24, r24
 1fc:	99 1f       	adc	r25, r25
 1fe:	82 95       	swap	r24
 200:	92 95       	swap	r25
 202:	90 7f       	andi	r25, 0xF0	; 240
 204:	98 27       	eor	r25, r24
 206:	80 7f       	andi	r24, 0xF0	; 240
 208:	98 27       	eor	r25, r24
 20a:	86 1b       	sub	r24, r22
 20c:	97 0b       	sbc	r25, r23
 20e:	b9 01       	movw	r22, r18
 210:	14 d1       	rcall	.+552    	; 0x43a <__udivmodhi4>
 212:	60 93 60 00 	sts	0x0060, r22	; 0x800060 <_edata>
 216:	08 95       	ret

00000218 <_Z17get_button_statusv>:
}

bool get_button_status(){
	ADCSRA |= (1 << ADSC);
 218:	86 b1       	in	r24, 0x06	; 6
 21a:	80 64       	ori	r24, 0x40	; 64
 21c:	86 b9       	out	0x06, r24	; 6
	while (ADCSRA & (1 << ADSC) );
 21e:	36 99       	sbic	0x06, 6	; 6
 220:	fe cf       	rjmp	.-4      	; 0x21e <_Z17get_button_statusv+0x6>
	if(ADCH <= ::base_ADC_level){
 222:	95 b1       	in	r25, 0x05	; 5
 224:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <_edata>
 228:	89 17       	cp	r24, r25
 22a:	10 f0       	brcs	.+4      	; 0x230 <_Z17get_button_statusv+0x18>
		return true;
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	08 95       	ret
	}
	else{
		return false;
 230:	80 e0       	ldi	r24, 0x00	; 0
	}
}
 232:	08 95       	ret

00000234 <main>:


main()
{
	pinMode(DIN, OUTPUT);
 234:	61 e0       	ldi	r22, 0x01	; 1
 236:	82 eb       	ldi	r24, 0xB2	; 178
 238:	03 df       	rcall	.-506    	; 0x40 <_Z7pinModehh>
	pinMode(IMP, OUTPUT);
 23a:	61 e0       	ldi	r22, 0x01	; 1
 23c:	87 ea       	ldi	r24, 0xA7	; 167
 23e:	00 df       	rcall	.-512    	; 0x40 <_Z7pinModehh>
	//pinMode(ADC_1, OUTPUT);
	pinMode(BTN, INPUT);
 240:	60 e0       	ldi	r22, 0x00	; 0
 242:	83 ea       	ldi	r24, 0xA3	; 163
 244:	fd de       	rcall	.-518    	; 0x40 <_Z7pinModehh>
	digitalWrite(BTN, HIGH);
 246:	61 e0       	ldi	r22, 0x01	; 1
 248:	83 ea       	ldi	r24, 0xA3	; 163
 24a:	1c df       	rcall	.-456    	; 0x84 <_Z12digitalWritehh>
	ADC_init();
 24c:	b6 df       	rcall	.-148    	; 0x1ba <_Z8ADC_initv>
	PWM_generation();
 24e:	52 df       	rcall	.-348    	; 0xf4 <_Z14PWM_generationv>
	base_ADC_measure();
 250:	bb df       	rcall	.-138    	; 0x1c8 <_Z16base_ADC_measurev>

	//uint8_t brt = 0,stage = 0, cur_g = 0, cur_r = 0, cur_b = 0;
	int8_t dir = 1;
	bool btn_status = false, btn_press = false, turn_off = false;

	uint8_t cur_g = EEPROM_read(0);
 252:	80 e0       	ldi	r24, 0x00	; 0
 254:	65 df       	rcall	.-310    	; 0x120 <_Z11EEPROM_readh>
 256:	88 2e       	mov	r8, r24
	uint8_t cur_r = EEPROM_read(1);
 258:	81 e0       	ldi	r24, 0x01	; 1
 25a:	62 df       	rcall	.-316    	; 0x120 <_Z11EEPROM_readh>
 25c:	68 2e       	mov	r6, r24
	uint8_t cur_b = EEPROM_read(2);
 25e:	82 e0       	ldi	r24, 0x02	; 2
 260:	5f df       	rcall	.-322    	; 0x120 <_Z11EEPROM_readh>
 262:	58 2e       	mov	r5, r24
	uint8_t stage = EEPROM_read(3);
 264:	83 e0       	ldi	r24, 0x03	; 3
 266:	5c df       	rcall	.-328    	; 0x120 <_Z11EEPROM_readh>
 268:	b8 2e       	mov	r11, r24
	uint8_t brt = EEPROM_read(4);
 26a:	84 e0       	ldi	r24, 0x04	; 4
 26c:	59 df       	rcall	.-334    	; 0x120 <_Z11EEPROM_readh>
 26e:	08 2f       	mov	r16, r24

	int timebase = 0, cur_stage_time = 0, last_stage_time = 0;
 270:	c1 2c       	mov	r12, r1
 272:	d1 2c       	mov	r13, r1
 274:	e1 2c       	mov	r14, r1
 276:	f1 2c       	mov	r15, r1
 278:	c0 e0       	ldi	r28, 0x00	; 0
 27a:	d0 e0       	ldi	r29, 0x00	; 0
	PWM_generation();
	base_ADC_measure();

	//uint8_t brt = 0,stage = 0, cur_g = 0, cur_r = 0, cur_b = 0;
	int8_t dir = 1;
	bool btn_status = false, btn_press = false, turn_off = false;
 27c:	91 2c       	mov	r9, r1
 27e:	10 e0       	ldi	r17, 0x00	; 0
 280:	a1 2c       	mov	r10, r1
	ADC_init();
	PWM_generation();
	base_ADC_measure();

	//uint8_t brt = 0,stage = 0, cur_g = 0, cur_r = 0, cur_b = 0;
	int8_t dir = 1;
 282:	77 24       	eor	r7, r7
 284:	73 94       	inc	r7
	//send_GRB(cur_g,cur_r,cur_b);
	while (1)
	{
		//PWM_generation_16();
		
		if (get_button_status())	{
 286:	c8 df       	rcall	.-112    	; 0x218 <_Z17get_button_statusv>
 288:	88 23       	and	r24, r24
 28a:	09 f4       	brne	.+2      	; 0x28e <main+0x5a>
 28c:	cb c0       	rjmp	.+406    	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
			
			timebase++;
 28e:	21 96       	adiw	r28, 0x01	; 1
			//digitalWrite(IMP, HIGH);
			if (timebase >= 50 && timebase < 1000 && btn_press == false){
 290:	ce 01       	movw	r24, r28
 292:	c2 97       	sbiw	r24, 0x32	; 50
 294:	86 3b       	cpi	r24, 0xB6	; 182
 296:	93 40       	sbci	r25, 0x03	; 3
 298:	c0 f5       	brcc	.+112    	; 0x30a <main+0xd6>
 29a:	11 11       	cpse	r17, r1
 29c:	36 c0       	rjmp	.+108    	; 0x30a <main+0xd6>
				
				if (btn_status == false){
 29e:	a1 10       	cpse	r10, r1
 2a0:	12 c0       	rjmp	.+36     	; 0x2c6 <main+0x92>
					
					send_GRB(cur_g, cur_r, cur_b);
 2a2:	45 2d       	mov	r20, r5
 2a4:	66 2d       	mov	r22, r6
 2a6:	88 2d       	mov	r24, r8
 2a8:	71 df       	rcall	.-286    	; 0x18c <_Z8send_GRBhhh>
					btn_status = !btn_status;
 2aa:	81 e0       	ldi	r24, 0x01	; 1
 2ac:	a8 26       	eor	r10, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2ae:	8f e7       	ldi	r24, 0x7F	; 127
 2b0:	9a e1       	ldi	r25, 0x1A	; 26
 2b2:	26 e0       	ldi	r18, 0x06	; 6
 2b4:	81 50       	subi	r24, 0x01	; 1
 2b6:	90 40       	sbci	r25, 0x00	; 0
 2b8:	20 40       	sbci	r18, 0x00	; 0
 2ba:	e1 f7       	brne	.-8      	; 0x2b4 <main+0x80>
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <main+0x8a>
 2be:	00 00       	nop
					btn_press = true;
					turn_off = false;
 2c0:	91 2c       	mov	r9, r1
				
				if (btn_status == false){
					
					send_GRB(cur_g, cur_r, cur_b);
					btn_status = !btn_status;
					btn_press = true;
 2c2:	11 e0       	ldi	r17, 0x01	; 1
 2c4:	b3 c0       	rjmp	.+358    	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
					turn_off = false;
					_delay_ms(100);
				}
				else {
					send_GRB(0,0,0);
 2c6:	40 e0       	ldi	r20, 0x00	; 0
 2c8:	60 e0       	ldi	r22, 0x00	; 0
 2ca:	80 e0       	ldi	r24, 0x00	; 0
 2cc:	5f df       	rcall	.-322    	; 0x18c <_Z8send_GRBhhh>
					EEPROM_write(cur_g, 0);
 2ce:	60 e0       	ldi	r22, 0x00	; 0
 2d0:	88 2d       	mov	r24, r8
 2d2:	18 df       	rcall	.-464    	; 0x104 <_Z12EEPROM_writehh>
					EEPROM_write(cur_r, 1);
 2d4:	61 e0       	ldi	r22, 0x01	; 1
 2d6:	86 2d       	mov	r24, r6
 2d8:	15 df       	rcall	.-470    	; 0x104 <_Z12EEPROM_writehh>
					EEPROM_write(cur_b, 2);
 2da:	62 e0       	ldi	r22, 0x02	; 2
 2dc:	85 2d       	mov	r24, r5
 2de:	12 df       	rcall	.-476    	; 0x104 <_Z12EEPROM_writehh>
					EEPROM_write(stage, 3);
 2e0:	63 e0       	ldi	r22, 0x03	; 3
 2e2:	8b 2d       	mov	r24, r11
 2e4:	0f df       	rcall	.-482    	; 0x104 <_Z12EEPROM_writehh>
					EEPROM_write(brt, 4);
 2e6:	64 e0       	ldi	r22, 0x04	; 4
 2e8:	80 2f       	mov	r24, r16
 2ea:	0c df       	rcall	.-488    	; 0x104 <_Z12EEPROM_writehh>
					btn_status = !btn_status;
 2ec:	81 e0       	ldi	r24, 0x01	; 1
 2ee:	a8 26       	eor	r10, r24
 2f0:	8f e7       	ldi	r24, 0x7F	; 127
 2f2:	9a e1       	ldi	r25, 0x1A	; 26
 2f4:	26 e0       	ldi	r18, 0x06	; 6
 2f6:	81 50       	subi	r24, 0x01	; 1
 2f8:	90 40       	sbci	r25, 0x00	; 0
 2fa:	20 40       	sbci	r18, 0x00	; 0
 2fc:	e1 f7       	brne	.-8      	; 0x2f6 <main+0xc2>
 2fe:	00 c0       	rjmp	.+0      	; 0x300 <main+0xcc>
 300:	00 00       	nop
					btn_press = true;
					turn_off = true;
 302:	99 24       	eor	r9, r9
 304:	93 94       	inc	r9
					EEPROM_write(cur_r, 1);
					EEPROM_write(cur_b, 2);
					EEPROM_write(stage, 3);
					EEPROM_write(brt, 4);
					btn_status = !btn_status;
					btn_press = true;
 306:	11 e0       	ldi	r17, 0x01	; 1
 308:	91 c0       	rjmp	.+290    	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
					turn_off = true;
					_delay_ms(100);
				}
			}
			else if (timebase >= 1000 && turn_off == false)
 30a:	c8 3e       	cpi	r28, 0xE8	; 232
 30c:	83 e0       	ldi	r24, 0x03	; 3
 30e:	d8 07       	cpc	r29, r24
 310:	0c f4       	brge	.+2      	; 0x314 <main+0xe0>
 312:	8c c0       	rjmp	.+280    	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 314:	91 10       	cpse	r9, r1
 316:	8a c0       	rjmp	.+276    	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
			{
				if (last_stage_time != 0){
 318:	c1 14       	cp	r12, r1
 31a:	d1 04       	cpc	r13, r1
 31c:	21 f0       	breq	.+8      	; 0x326 <main+0xf2>
				timebase += last_stage_time;
 31e:	cc 0d       	add	r28, r12
 320:	dd 1d       	adc	r29, r13
				last_stage_time = 0;
 322:	c1 2c       	mov	r12, r1
 324:	d1 2c       	mov	r13, r1
				}
				
				brt += dir;
 326:	07 0d       	add	r16, r7
				if (brt >= 255) {
 328:	0f 3f       	cpi	r16, 0xFF	; 255
 32a:	19 f0       	breq	.+6      	; 0x332 <main+0xfe>
					
					dir = -1;
				}
				else if (brt == 0) {
 32c:	00 23       	and	r16, r16
 32e:	21 f0       	breq	.+8      	; 0x338 <main+0x104>
 330:	05 c0       	rjmp	.+10     	; 0x33c <main+0x108>
				}
				
				brt += dir;
				if (brt >= 255) {
					
					dir = -1;
 332:	77 24       	eor	r7, r7
 334:	7a 94       	dec	r7
 336:	02 c0       	rjmp	.+4      	; 0x33c <main+0x108>
				}
				else if (brt == 0) {
					
					dir = 1;
 338:	77 24       	eor	r7, r7
 33a:	73 94       	inc	r7
				}
				cur_stage_time++;
 33c:	9f ef       	ldi	r25, 0xFF	; 255
 33e:	e9 1a       	sub	r14, r25
 340:	f9 0a       	sbc	r15, r25
				// time the animation
				if (timebase > 1509) {
 342:	c6 3e       	cpi	r28, 0xE6	; 230
 344:	25 e0       	ldi	r18, 0x05	; 5
 346:	d2 07       	cpc	r29, r18
 348:	a4 f0       	brlt	.+40     	; 0x372 <main+0x13e>
					cur_stage_time=0;
					timebase = 1000;

					stage += 1;
 34a:	b3 94       	inc	r11
					brt = 0;
					dir = 1;
					if (stage >= 8) {
 34c:	87 e0       	ldi	r24, 0x07	; 7
 34e:	8b 15       	cp	r24, r11
 350:	40 f0       	brcs	.+16     	; 0x362 <main+0x12e>
					dir = 1;
				}
				cur_stage_time++;
				// time the animation
				if (timebase > 1509) {
					cur_stage_time=0;
 352:	e1 2c       	mov	r14, r1
 354:	f1 2c       	mov	r15, r1
					timebase = 1000;
 356:	c8 ee       	ldi	r28, 0xE8	; 232
 358:	d3 e0       	ldi	r29, 0x03	; 3

					stage += 1;
					brt = 0;
 35a:	00 e0       	ldi	r16, 0x00	; 0
					dir = 1;
 35c:	77 24       	eor	r7, r7
 35e:	73 94       	inc	r7
 360:	08 c0       	rjmp	.+16     	; 0x372 <main+0x13e>
					dir = 1;
				}
				cur_stage_time++;
				// time the animation
				if (timebase > 1509) {
					cur_stage_time=0;
 362:	e1 2c       	mov	r14, r1
 364:	f1 2c       	mov	r15, r1
					timebase = 1000;
 366:	c8 ee       	ldi	r28, 0xE8	; 232
 368:	d3 e0       	ldi	r29, 0x03	; 3

					stage += 1;
					brt = 0;
 36a:	00 e0       	ldi	r16, 0x00	; 0
					dir = 1;
					if (stage >= 8) {
						stage = 0;
 36c:	b1 2c       	mov	r11, r1
					cur_stage_time=0;
					timebase = 1000;

					stage += 1;
					brt = 0;
					dir = 1;
 36e:	77 24       	eor	r7, r7
 370:	73 94       	inc	r7
						stage = 0;
					}
				}
				//send_GRB(0,0,255-ADCH);

				if (stage == 0) {
 372:	b1 10       	cpse	r11, r1
 374:	08 c0       	rjmp	.+16     	; 0x386 <main+0x152>
					send_GRB(0,brt,0);
 376:	40 e0       	ldi	r20, 0x00	; 0
 378:	60 2f       	mov	r22, r16
 37a:	80 e0       	ldi	r24, 0x00	; 0
 37c:	07 df       	rcall	.-498    	; 0x18c <_Z8send_GRBhhh>
					cur_g = 0;
					cur_r = brt;
 37e:	60 2e       	mov	r6, r16
					cur_b = 0;
 380:	51 2c       	mov	r5, r1
				}
				//send_GRB(0,0,255-ADCH);

				if (stage == 0) {
					send_GRB(0,brt,0);
					cur_g = 0;
 382:	81 2c       	mov	r8, r1
 384:	53 c0       	rjmp	.+166    	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
					cur_r = brt;
					cur_b = 0;

					} else if (stage == 1) {
 386:	91 e0       	ldi	r25, 0x01	; 1
 388:	b9 12       	cpse	r11, r25
 38a:	09 c0       	rjmp	.+18     	; 0x39e <main+0x16a>
					send_GRB(brt / 2,brt,0);
 38c:	80 2e       	mov	r8, r16
 38e:	86 94       	lsr	r8
 390:	40 e0       	ldi	r20, 0x00	; 0
 392:	60 2f       	mov	r22, r16
 394:	88 2d       	mov	r24, r8
 396:	fa de       	rcall	.-524    	; 0x18c <_Z8send_GRBhhh>
					cur_g = brt / 2;
					cur_r = brt;
 398:	60 2e       	mov	r6, r16
					cur_b = 0;
 39a:	51 2c       	mov	r5, r1
 39c:	47 c0       	rjmp	.+142    	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>

					} else if (stage == 2) {
 39e:	22 e0       	ldi	r18, 0x02	; 2
 3a0:	b2 12       	cpse	r11, r18
 3a2:	08 c0       	rjmp	.+16     	; 0x3b4 <main+0x180>
					send_GRB(brt,brt,0);
 3a4:	40 e0       	ldi	r20, 0x00	; 0
 3a6:	60 2f       	mov	r22, r16
 3a8:	80 2f       	mov	r24, r16
 3aa:	f0 de       	rcall	.-544    	; 0x18c <_Z8send_GRBhhh>
					cur_g = brt;
					cur_r = brt;
 3ac:	60 2e       	mov	r6, r16
					cur_r = brt;
					cur_b = 0;

					} else if (stage == 2) {
					send_GRB(brt,brt,0);
					cur_g = brt;
 3ae:	80 2e       	mov	r8, r16
					cur_r = brt;
					cur_b = 0;
 3b0:	51 2c       	mov	r5, r1
 3b2:	3c c0       	rjmp	.+120    	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>

					} else if (stage == 3) {
 3b4:	83 e0       	ldi	r24, 0x03	; 3
 3b6:	b8 12       	cpse	r11, r24
 3b8:	08 c0       	rjmp	.+16     	; 0x3ca <main+0x196>
					send_GRB(brt,0,0);
 3ba:	40 e0       	ldi	r20, 0x00	; 0
 3bc:	60 e0       	ldi	r22, 0x00	; 0
 3be:	80 2f       	mov	r24, r16
 3c0:	e5 de       	rcall	.-566    	; 0x18c <_Z8send_GRBhhh>
					cur_g = brt;
 3c2:	80 2e       	mov	r8, r16
					cur_r = 0;
					cur_b = 0;
 3c4:	51 2c       	mov	r5, r1
					cur_b = 0;

					} else if (stage == 3) {
					send_GRB(brt,0,0);
					cur_g = brt;
					cur_r = 0;
 3c6:	61 2c       	mov	r6, r1
 3c8:	31 c0       	rjmp	.+98     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
					cur_b = 0;

					} else if (stage == 4) {
 3ca:	94 e0       	ldi	r25, 0x04	; 4
 3cc:	b9 12       	cpse	r11, r25
 3ce:	08 c0       	rjmp	.+16     	; 0x3e0 <main+0x1ac>
					send_GRB(brt,0, brt);
 3d0:	40 2f       	mov	r20, r16
 3d2:	60 e0       	ldi	r22, 0x00	; 0
 3d4:	80 2f       	mov	r24, r16
 3d6:	da de       	rcall	.-588    	; 0x18c <_Z8send_GRBhhh>
					cur_g = brt;
					cur_r = 0;
					cur_b = brt;
 3d8:	50 2e       	mov	r5, r16
					cur_r = 0;
					cur_b = 0;

					} else if (stage == 4) {
					send_GRB(brt,0, brt);
					cur_g = brt;
 3da:	80 2e       	mov	r8, r16
					cur_r = 0;
 3dc:	61 2c       	mov	r6, r1
 3de:	26 c0       	rjmp	.+76     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
					cur_b = brt;
					} else if (stage == 5) {
 3e0:	25 e0       	ldi	r18, 0x05	; 5
 3e2:	b2 12       	cpse	r11, r18
 3e4:	08 c0       	rjmp	.+16     	; 0x3f6 <main+0x1c2>
					send_GRB(0, 0, brt);
 3e6:	40 2f       	mov	r20, r16
 3e8:	60 e0       	ldi	r22, 0x00	; 0
 3ea:	80 e0       	ldi	r24, 0x00	; 0
 3ec:	cf de       	rcall	.-610    	; 0x18c <_Z8send_GRBhhh>
					cur_g = 0;
					cur_r = 0;
					cur_b = brt;
 3ee:	50 2e       	mov	r5, r16
					cur_r = 0;
					cur_b = brt;
					} else if (stage == 5) {
					send_GRB(0, 0, brt);
					cur_g = 0;
					cur_r = 0;
 3f0:	61 2c       	mov	r6, r1
					cur_g = brt;
					cur_r = 0;
					cur_b = brt;
					} else if (stage == 5) {
					send_GRB(0, 0, brt);
					cur_g = 0;
 3f2:	81 2c       	mov	r8, r1
 3f4:	1b c0       	rjmp	.+54     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
					cur_r = 0;
					cur_b = brt;

					} else if (stage == 6) {
 3f6:	86 e0       	ldi	r24, 0x06	; 6
 3f8:	b8 12       	cpse	r11, r24
 3fa:	09 c0       	rjmp	.+18     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
					send_GRB(0, brt / 2, brt);
 3fc:	60 2e       	mov	r6, r16
 3fe:	66 94       	lsr	r6
 400:	40 2f       	mov	r20, r16
 402:	66 2d       	mov	r22, r6
 404:	80 e0       	ldi	r24, 0x00	; 0
 406:	c2 de       	rcall	.-636    	; 0x18c <_Z8send_GRBhhh>
					cur_g = 0;
					cur_r = brt / 2;
					cur_b = brt;
 408:	50 2e       	mov	r5, r16
					cur_r = 0;
					cur_b = brt;

					} else if (stage == 6) {
					send_GRB(0, brt / 2, brt);
					cur_g = 0;
 40a:	81 2c       	mov	r8, r1
 40c:	0f c0       	rjmp	.+30     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
					cur_r = brt / 2;
					cur_b = brt;

					} else if (stage == 7) {
 40e:	97 e0       	ldi	r25, 0x07	; 7
 410:	b9 12       	cpse	r11, r25
 412:	0c c0       	rjmp	.+24     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
					send_GRB(brt, brt, brt);
 414:	40 2f       	mov	r20, r16
 416:	60 2f       	mov	r22, r16
 418:	80 2f       	mov	r24, r16
 41a:	b8 de       	rcall	.-656    	; 0x18c <_Z8send_GRBhhh>
					cur_g = brt;
					cur_r = brt;
					cur_b = brt;
 41c:	50 2e       	mov	r5, r16
					cur_b = brt;

					} else if (stage == 7) {
					send_GRB(brt, brt, brt);
					cur_g = brt;
					cur_r = brt;
 41e:	60 2e       	mov	r6, r16
					cur_r = brt / 2;
					cur_b = brt;

					} else if (stage == 7) {
					send_GRB(brt, brt, brt);
					cur_g = brt;
 420:	80 2e       	mov	r8, r16
 422:	04 c0       	rjmp	.+8      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
		}
		else {
			//btn_status = false;
			btn_press = false;
			timebase = 0;
			last_stage_time = cur_stage_time;
 424:	67 01       	movw	r12, r14
			}
		}
		else {
			//btn_status = false;
			btn_press = false;
			timebase = 0;
 426:	c0 e0       	ldi	r28, 0x00	; 0
 428:	d0 e0       	ldi	r29, 0x00	; 0
				}
			}
		}
		else {
			//btn_status = false;
			btn_press = false;
 42a:	10 e0       	ldi	r17, 0x00	; 0
 42c:	87 e8       	ldi	r24, 0x87	; 135
 42e:	93 e1       	ldi	r25, 0x13	; 19
 430:	01 97       	sbiw	r24, 0x01	; 1
 432:	f1 f7       	brne	.-4      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 434:	00 c0       	rjmp	.+0      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
 436:	00 00       	nop
 438:	26 cf       	rjmp	.-436    	; 0x286 <main+0x52>

0000043a <__udivmodhi4>:
 43a:	aa 1b       	sub	r26, r26
 43c:	bb 1b       	sub	r27, r27
 43e:	51 e1       	ldi	r21, 0x11	; 17
 440:	07 c0       	rjmp	.+14     	; 0x450 <__udivmodhi4_ep>

00000442 <__udivmodhi4_loop>:
 442:	aa 1f       	adc	r26, r26
 444:	bb 1f       	adc	r27, r27
 446:	a6 17       	cp	r26, r22
 448:	b7 07       	cpc	r27, r23
 44a:	10 f0       	brcs	.+4      	; 0x450 <__udivmodhi4_ep>
 44c:	a6 1b       	sub	r26, r22
 44e:	b7 0b       	sbc	r27, r23

00000450 <__udivmodhi4_ep>:
 450:	88 1f       	adc	r24, r24
 452:	99 1f       	adc	r25, r25
 454:	5a 95       	dec	r21
 456:	a9 f7       	brne	.-22     	; 0x442 <__udivmodhi4_loop>
 458:	80 95       	com	r24
 45a:	90 95       	com	r25
 45c:	bc 01       	movw	r22, r24
 45e:	cd 01       	movw	r24, r26
 460:	08 95       	ret

00000462 <_exit>:
 462:	f8 94       	cli

00000464 <__stop_program>:
 464:	ff cf       	rjmp	.-2      	; 0x464 <__stop_program>
